apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
// Kotlin 需要增加 kapt plugin 才可以使用 DataBinding
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
        generateStubs = true
    }
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    // Gradle Plugin 4.0 及以上
    buildFeatures {
        dataBinding = true
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath true
                arguments = [ eventBusIndex : 'com.maple.baselib.EventBusIndex' ]
            }
        }
    }

    // 开启 Java 8 支持
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        /**
         * Java源文件编码。
         */
        encoding "UTF-8"
        incremental true
    }

    kotlinOptions {
        jvmTarget = "${JavaVersion.VERSION_1_8}"
    }


    buildTypes {

        debug {
            //library 不移除无用的资源文件
            shrinkResources false
            //开启压缩
            zipAlignEnabled true
            //开启混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            //library 不移除无用的资源文件
            shrinkResources false
            //开启压缩
            zipAlignEnabled true
            //开启混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    configurations.all {
        resolutionStrategy {
            force 'androidx.annotation:annotation:1.1.0'
            force 'androidx.annotation:annotation-experimental:1.0.0'
            force 'androidx.transition:transition:1.3.1'
            force 'com.squareup.okio:okio:2.9.0'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // androidx
    implementation androidxs

    //jetPack
    implementation deps.lifecycleExtensions
    implementation deps.lifecycleJava8
    implementation deps.lifecycleProcess
    implementation deps.viewModelKTX
    implementation deps.natigationFragment
    implementation deps.navigationFragmentKTX
    implementation deps.navigationUI
    implementation deps.navigationUIKTX
    implementation deps.natigationRuntimeKTX

    //路由
    implementation deps.arouterApi
    kapt deps.arouterCompiler

    //net
    implementation deps.retrofit2
    implementation deps.converterGson
    implementation deps.loggingInterceptor
    implementation deps.persistentCookieJar
    implementation deps.commonsCodec

    // glide
    implementation deps.glide
    implementation deps.glideIntegration
    kapt deps.glideCompiler
    kapt deps.annotation
    implementation deps.glideTransformations
    implementation deps.kotson

    //rxPermissions
    implementation deps.rxAndroid
    implementation deps.rxJava
    implementation deps.rxPermissions

    //eventBus
    implementation deps.eventBus
    kapt deps.eventBusAnnotationProcessor

}